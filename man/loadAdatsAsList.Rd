% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadAdatsAsList.R
\name{loadAdatsAsList}
\alias{loadAdatsAsList}
\alias{collapseAdats}
\title{Load ADAT files as a list}
\usage{
loadAdatsAsList(files, collapse = FALSE, verbose = interactive(), ...)

collapseAdats(x)
}
\arguments{
\item{files}{A character string of files to load.}

\item{collapse}{Logical. Should the resulting list of ADATs be
collapsed into a single ADAT object?}

\item{verbose}{Logical. Should the function call be run in \emph{verbose}
mode.}

\item{...}{Additional arguments passed to \code{\link[=read_adat]{read_adat()}}.}

\item{x}{A list of \code{soma_adat} class objects loaded via \code{\link[=loadAdatsAsList]{loadAdatsAsList()}}.}
}
\value{
A list of ADATs, each a \code{soma_adat} object corresponding to a file
in of the argument \code{files}. The list names are derived from the file names.
}
\description{
Load a series of ADATs and return a list of \code{soma_adat}
objects, one for each ADAT file.
\code{\link[=collapseAdats]{collapseAdats()}} concatenates a list of ADATs from \code{\link[=loadAdatsAsList]{loadAdatsAsList()}},
while maintaining the relevant attribute entries (mainly the \code{HEADER}
element). This makes writing out the final object possible without the
loss of \code{HEADER} information.
}
\details{
\strong{Note 1:} the \code{rbind} occurs on the  \emph{intersect} of the common columns
names, unique columns are silently dropped.

\strong{Note 2:} If \code{rbind} on the \emph{union} is desired, use \code{\link[=bind_rows]{bind_rows()}},
however this results in \code{NAs} in non-intersecting columns. For many files
with little variable intersection, a sparse RFU-matrix will result.
See \code{Examples} below.
}
\examples{
files <- system.file("example", package = "SomaDataIO") \%>\%
  dir(pattern = "[.]adat$", full.names = TRUE) \%>\% rev()

# 2 files in directory
files

adats <- loadAdatsAsList(files)

# collapse into 1 ADAT
all <- collapseAdats(adats)

# Alternativly use the `collapse = TRUE`
coll <- loadAdatsAsList(files, collapse = TRUE)

identical(coll, all)

# Lastly, `rbind` on the `union` of columns also possible
# but produces numerous NAs for missing cells
# And will break the ADAT attributes
union_adat <- dplyr::bind_rows(adats, .id = "SourceFile")
}
\seealso{
\code{\link[=read_adat]{read_adat()}}

Other IO: 
\code{\link{parseHeader}()},
\code{\link{read_adat}()},
\code{\link{soma_adat}},
\code{\link{write_adat}()}
}
\author{
Stu Field
}
\concept{IO}
