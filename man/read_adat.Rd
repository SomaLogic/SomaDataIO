% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read-adat.R, R/extract.R,
%   R/s3-print-soma-adat.R, R/s3-summary-soma-adat.R
\name{read_adat}
\alias{read_adat}
\alias{is.soma_adat}
\alias{[.soma_adat}
\alias{print.soma_adat}
\alias{summary.soma_adat}
\title{Read (Load) SomaLogic ADATs}
\usage{
read_adat(file, debug = FALSE, verbose = getOption("verbose"), ...)

is.soma_adat(x)

\method{[}{soma_adat}(x, i, j, drop = TRUE)

\method{print}{soma_adat}(x, show_header = FALSE, ...)

\method{summary}{soma_adat}(object, apt.data, digits = max(3L, getOption("digits") - 3L), ...)
}
\arguments{
\item{file}{Character. The elaborated path and file name of the \verb{*.adat}
file to be loaded into an R workspace.}

\item{debug}{Logical. Used for debugging and development of an ADAT that
fails to load, particularly out-of-spec, poorly modified, or legacy ADATs.}

\item{verbose}{Logical. Should the function call be run in \emph{verbose}
mode, printing relevant diagnostic call information to the console. Defaults
to the global variable defined in \code{\link[=getOption]{getOption()}}.}

\item{...}{Additional arguments passed ultimately to
\code{\link[=read_delim]{read_delim()}}, or  additional arguments passed to either
other S3 print or summary methods as required by those generics.}

\item{x}{Object of class \code{soma_adat} used in the
S3 generic \code{\link{print}}.}

\item{i}{
    indices specifying elements to extract or replace.  Indices are
    \code{numeric} or \code{character} vectors or empty (missing) or
    \code{NULL}.  Numeric values are coerced to integer as by
    \code{\link[base]{as.integer}} (and hence truncated towards zero).
    Character vectors will be matched to the \code{\link[base]{names}} of the
    object (or for matrices/arrays, the \code{\link[base]{dimnames}}):
    see \sQuote{Character indices} below for further details.

    For \code{[}-indexing only: \code{i}, \code{j}, \code{\dots} can be
    logical vectors, indicating elements/slices to select.  Such vectors
    are recycled if necessary to match the corresponding extent.
    \code{i}, \code{j}, \code{\dots} can also be negative integers,
    indicating elements/slices to leave out of the selection.

    When indexing arrays by \code{[} a single argument \code{i} can be a
    matrix with as many columns as there are dimensions of \code{x}; the
    result is then a vector with elements corresponding to the sets of
    indices in each row of \code{i}.

    An index value of \code{NULL} is treated as if it were \code{integer(0)}.
  }

\item{j}{
    indices specifying elements to extract or replace.  Indices are
    \code{numeric} or \code{character} vectors or empty (missing) or
    \code{NULL}.  Numeric values are coerced to integer as by
    \code{\link[base]{as.integer}} (and hence truncated towards zero).
    Character vectors will be matched to the \code{\link[base]{names}} of the
    object (or for matrices/arrays, the \code{\link[base]{dimnames}}):
    see \sQuote{Character indices} below for further details.

    For \code{[}-indexing only: \code{i}, \code{j}, \code{\dots} can be
    logical vectors, indicating elements/slices to select.  Such vectors
    are recycled if necessary to match the corresponding extent.
    \code{i}, \code{j}, \code{\dots} can also be negative integers,
    indicating elements/slices to leave out of the selection.

    When indexing arrays by \code{[} a single argument \code{i} can be a
    matrix with as many columns as there are dimensions of \code{x}; the
    result is then a vector with elements corresponding to the sets of
    indices in each row of \code{i}.

    An index value of \code{NULL} is treated as if it were \code{integer(0)}.
  }

\item{drop}{For matrices and arrays.  If \code{TRUE} the result is
    coerced to the lowest possible dimension (see the examples).  This
    only works for extracting elements, not for the replacement.  See
    \code{\link[base]{drop}} for further details.
  }

\item{show_header}{Logical. Should all the \verb{Header Data} information
be displayed instead of the data frame (\code{tibble}) object?}

\item{object}{Object of class \code{soma_adat} used in
the S3 generic \code{\link[=summary]{summary()}}.}

\item{apt.data}{An optional object, the result of a call to
\code{getAptData}, from which Target names can be extracted.
If \code{NULL} (default), and the attributes of \code{object} are intact,
Target names are extracted from the "Col.Meta" of the attributes.
If neither of these options are available, the search path is interrogated
for \code{adat_data}, where it may find \code{apt_data}, which is used to
extract Target names. If none of the above options are available,
the "Target" row of the S3 \code{\link[=summary]{summary()}} method is left blank.}

\item{digits}{Integer. Used for number formatting
with \code{\link[=signif]{signif()}}.}
}
\value{
A \code{data.frame}-like object of class \code{soma_adat}
consisting of SomaLogic RFU (feature) data and clinical meta data as
columns, and samples as rows. Row names are labeled with the unique ID
"SlideId_Subarray" concatenation. The sections of the ADAT header (e.g.,
"Header.Meta", "Col.Meta", ...) are stored as attributes (e.g.
\code{attributes(x)$Header.Meta}).

A logical indicating whether \code{x} inherits from class \code{soma_adat}.
}
\description{
The parse and load a \verb{*.adat} file as a \code{data.frame}-like object into
an R workspace environment. The class of the returned object is
a \code{soma_adat} object.

\code{\link[=is.soma_adat]{is.soma_adat()}} checks if an object is of class \code{soma_adat}.
See \code{\link[=inherits]{inherits()}}.

Redirect of the generic \code{`[`} extract function that keeps
the attributes intact \emph{and} subsets the \code{Col.Meta} so that it
is consistent with the new object.
}
\section{Methods (by generic)}{
\itemize{
\item \code{print}: The S3 generic print method (\code{print}) returns summary information
parsed from the object attributes, if possible (see examples), followed
by a dispatch to the \code{tibble} print method.

\item \code{summary}: The associated S3 generic summary method (\code{\link[=summary]{summary()}}) returns
the following for each column of the ADAT object containing SOMAmer data
(clinical meta data is excluded):
\itemize{
\item{Target (if available)}
\item{Minimum value}
\item{1st Quantile}
\item{Median}
\item{Mean}
\item{3rd Quantile}
\item{Maximum value}
\item{Standard deviation}
}
}}

\examples{
f <- system.file("sample", "sample.adat", package = "SomaDataIO",
                 mustWork = TRUE)
my_adat <- read_adat(f)
is.soma_adat(my_adat)

# S3 print method
my_adat                             # redirect uses `tibble` method
print(my_adat, show_header = TRUE)  # show the header info; no RFU data

# S3 write method
fout <- tempfile(fileext = ".adat")
write_adat(my_adat, file = fout)

# read same file back in as check
read_adat(fout)

# S3 summary method
# MMP analytes
mmps <- c("seq.2579.17", "seq.2788.55", "seq.2789.26",
          "seq.2838.53", "seq.2954.56", "seq.3743.1",
          "seq.4160.49", "seq.4496.60", "seq.4924.32",
          "seq.4925.54", "seq.5002.76", "seq.5268.49")
summary(my_adat[, mmps])  # summary of MMPs

# Alternatively pass apt.data for Target info
\dontrun{
ad <- apt_data                 # internal SomaLogic use
ad <- ex_somamer_table         # if using SomaDataIO
summary(my_adat[, mmps], apt.data = ad)
}

}
\seealso{
\code{\link[=read_delim]{read_delim()}}

Other IO: 
\code{\link{write_adat}()}
}
\author{
Stu Field
}
\concept{IO}
